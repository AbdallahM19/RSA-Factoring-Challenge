#!/usr/bin/env bash

check_factor() {
    if [ $# -ne 1 ]; then
        echo "Usage: check_factor <number>"
        exit 1
    fi

    number=$1
    factors=()

    # Handle 2 as a special case
    while [ $((number % 2)) -eq 0 ]; do
        factors+=(2)
        number=$((number / 2))
    done

    # Check odd numbers starting from 3
    for ((i = 3; i * i <= number; i += 2)); do
        while [ $((number % i)) -eq 0 ]; do
            factors+=($i)
            number=$((number / i))
        done
    done

    # If number is a prime greater than 2
    if [ $number -gt 2 ]; then
        factors+=($number)
    fi

    # Print the factorization
    if [ ${#factors[@]} -eq 1 ]; then
        echo "$1=1*$1"
    else
        max_factor=${factors[-1]}
        second_max_factor=${factors[-2]}

        if [ ${#factors[@]} -gt 2 ]; then
            for ((i=${#factors[@]}-3; i>=0; i--)); do
                if [ $((factors[$i] * second_max_factor)) -gt $((max_factor * factors[$i+1])) ]; then
                    break
                fi

                second_max_factor=${factors[$i]}
            done
        fi

        echo "$1=$max_factor*$second_max_factor"
    fi
}

if [ $# -ne 1 ]; then
    echo 'Usage: factors <file>'
    exit 1
else
    while read -r number; do
        check_factor "$number"
    done < "$1"
fi

