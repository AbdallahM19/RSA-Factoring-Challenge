#!/usr/bin/env python3
""" RSA Factoring Challenge """

from sys import argv
from math import isqrt


def open_read_file(file_name):
    """ Read from file and add to array """
    with open(file_name, "r", encoding="utf-8") as file:
        lines = file.readlines()
    numbers_to_factor = [int(line) for line in lines]
    return numbers_to_factor


def is_prime(num):
    """ Check if a number is prime """
    if num < 2:
        return False
    for i in range(2, isqrt(num) + 1):
        if num % i == 0:
            return False
    return True


def prime_factorize(n):
    """ Find prime factors of n """
    factors = []
    for i in range(2, n + 1):
        if is_prime(i):
            while n % i == 0:
                factors.append(i)
                n //= i
    return factors


def find_and_times(n):
    """ Factorize using prime numbers """
    factors = prime_factorize(n)
    if len(factors) == 2:
    	if (factors[1] >= factors[0]):
    		print("{}={}*{}".format(n, factors[1], factors[0]))
    	else:
        	print("{}={}*{}".format(n, factors[0], factors[1]))
    else:
        print("Unable to factorize: {}".format(n))


def factorize_numbers(numbers):
    """ Factor each number in the list """
    for number in numbers:
        find_and_times(number)


if len(argv) == 2:
    numbers_to_factorize = open_read_file(argv[1])
    factorize_numbers(numbers_to_factorize)

